# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        DataDog\UserBundle\Entity\User:
            algorithm: bcrypt

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_MANAGER:       ROLE_EMPLOYEE
        ROLE_ADMIN:         ROLE_MANAGER

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            entity: { class: UserBundle:User, property: username }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login_firewall:
            pattern:    ^/login$
            anonymous:  true
        main:
            pattern: ^/
            form_login:
                login_path: /login
                always_use_default_target_path: true
                default_target_path: /home
            logout:
                path: /logout
                target: /login

    access_control:
        - { path: ^/user/create, roles: ROLE_ADMIN }
        - { path: ^/user/edit, roles: ROLE_ADMIN }
        - { path: ^/team/create, roles: ROLE_MANAGER }
        - { path: ^/team/edit, roles: ROLE_MANAGER }
        - { path: ^/goal/create, roles: ROLE_MANAGER }
        - { path: ^/goal/edit, roles: ROLE_MANAGER }
        - { path: ^/achievement/create, roles: ROLE_MANAGER }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/internal, roles: IS_AUTHENTICATED_ANONYMOUSLY } # internal api endoint
        - { path: ^/, roles: ROLE_EMPLOYEE }
        - { path: ^/home, roles: ROLE_EMPLOYEE }

    access_denied_url: /denied